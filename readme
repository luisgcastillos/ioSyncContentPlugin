ioSyncContentPlugin
===================

This plugin will allow you to sync content and databases from one server to another.
Many projects we work on include at least a staging server as well as a production
server. In many cases we need to update our local boxes with data that is either
on production or staging servers.

Requirements
============

  * Doctrine

Syncing Content
===============

To sync content from one server to another you just need to type:

    php symfony io:sync-content SOURCE DESTINATION

NOTE: The task will do nothing unless you pass what content you want synced. You
      can sync the database, files and folders, or both by passing --include-database
      OR --include-content. You can always pass both options if you want to sync
      both.

The source and destination are references to the servers that are in your properties.ini
file (config/properties.ini). For example if you had an entry labeled production:

    [production]
      user=username
      host=example.com
      dir=/var/www/project
      port=22

Then you can import content from it by typeing:

    php symfony io:studio production localhost

NOTE: localhost refers to your machine. It does not need to be defined in your
      properties.ini file.

Syncing Databases
=================

To sync a database you just need to type:

    php symfony io:sync-content SOURCE DESTINATION --include-database

This will take a dump of the current database on SOURCE server and import it into
the DESTINATION. For example, if you wanted to import the database on your production
server to your computer:

    php symfony io:sync-content production localhost --include-database

This will take a dump of the database used on your production server and import
it into your localhost.

Syncing Files and Folders
=========================

To sync files and folders you just type:

  php symfony io:sync-content SOURCE DESTINATION --include-content

This will look in your app.yml file to see what you want to sync. An example of
the app.yml will look similar to this:

    all:
      ioSyncContent:
        content:
          - 'web/uploads'

So if you want to sync content from the production server to you local box, you
would type:

    php symfony io:sync-content production localhost --include-content


Advanced Usage
==============

The io:sync-content task can take a number of different options. That can affect
the way it works.

--application=frontend
    If you want to use something other then the frontend app, change it here. This
    is used when syncing the database from one server to another.

--env=dev
    If you have multiple environments setup, then you can change that by passing
    this option.

--connection=doctrine
    This referers to the connection name that is located in your databases.yml

--rsync-options="-avz"
    When you sync files and folders, the task will use rsync. Sometimes you will
    want to change some of the options that rsync uses.

--dry-run
    If you pass this option, then only the output will be displayed, nothing will
    sync.
